{
    "contents" : "#' A regression object \n#' \n#' Object of class \\code{Regressions} are created by the \\code{runReg} and \\code{testReg} functions\n#'\n#' \n#' An object of the class `Regressions' has the following slots:\n#' \\itemize{\n#' \\item \\code{Y} A depedent variable\n#' \\item \\code{X} Covariates\n#' \\item \\code{output} Output includes coefficients, R^2 values, tStat values, and pValue\n#' }\n#'\n#' @author Taeyong Park: \\email{typark99@@gmail.com}\n#' @aliases Regressions-class initialize,Regressions-method getRegressions,Regressions-method \n#' @rdname Regressions\n#' @export\nsetClass(Class=\"Regressions\", \n         slot = list(\n           Y = \"matrix\", # Input\n           X = \"matrix\", # Input\n           output = \"list\" # Output: This will include coefficients and R.squared for runReg function and tStat, pValue, and sig for testReg function\n         ),\n         prototype = prototype(\n           Y = matrix(nrow=0, ncol=0),\n           X = matrix(nrow=0, ncol=0),\n           output = list()\n         )\n)\n\n#' @export\nsetMethod(\"initialize\", \"Regressions\", \n          function(.Object, ...){\n            value=callNextMethod()\n            return(value)\n          }\n) \n\n#' @rdname Regressions\n#' @export \nsetGeneric(\"getRegressions\", \n           function(object=\"Regressions\")  {\n             standardGeneric(\"getRegressions\")\n           }\n)\n\n#' @export\nsetMethod(f=\"getRegressions\", \n          signature=\"Regressions\", \n          function(object){ \n            return(output=object@output)\n          }\n) \n\n\n#' @export\nsetMethod(f=\"print\",  # Since print is a built-in function we do not set a generic function, and define the print function used under the Regressions class  \n          signature=\"Regressions\",\n          definition=function(x){\n            cat(\"*** Start Print (Class-Regressions) ***\", \"\\n\", \"\\n\")\n            cat(\"1) Coefficients\", \"\\n\")\n            for(i in 1:nrow(x@output$coefficients)){  # for loop enables to separate each model \n              cat(\"Model\", i, \":\", x@output$coefficients[i,], \"\\n\")\n            }\n            cat(\"2) R.squared\", \"\\n\")\n            for(i in 1:nrow(x@output$coefficients)){ # for loop enables to separate each model \n              cat(\"Model\", i, \":\", x@output$R.squared[i], \"\\n\")\n            }\n            cat(\"\\n\",\"**** End Print (Class-Regressions) ****\")\n          }\n)\n\n#' @export\nsetMethod(f=\"plot\",  # Since plot is a built-in function we do not set a generic function, and define the plot function used under the Regressions class  \n          signature=\"Regressions\",\n          definition=function(x){  \n            plot(1:nrow(x@output$coefficients), x@output$R.squared, # This will plot the value of r.squared for each model\n                 pch=\"+\", col=\"darkgreen\",\n                 xlim=c(0.5, nrow(x@output$coefficients)+0.5),\n                 xlab=\"Model (the number of covariates)\", ylab=\"R.squared\",\n                 main=\"The Value of R.squared across Models\")\n            }\n)\n\n\n# \"show\" is the default method used to show an object when its name is written in the console. \n# We can define it by taking into account the size of the object: if there are too many trajectories, show post only part of them.\nsetMethod(f=\"show\",\n          signature=\"Regressions\", \n          definition=function(object){\n            cat(\"*** Start Show (Class-Regressions) *** \\n\", \"\\n\")\n            m=2 # This defines the maximum number of rows that we want to deal with \n            nrowShow <- min(m, nrow(object@output$coefficients)) # If nrow(x@output$coefficients) is greater than m, then the output will show only \"m\" size of object \n            cat(\"1) Coefficients\", \"\\n\")\n            for(i in 1:nrowShow){  # for loop enables to separate each model \n              cat(\"Model\", i, \":\", object@output$coefficients[i,], \"\\n\")\n            }\n            cat(\"2) R.squared\", \"\\n\")\n            for(i in 1:nrowShow){ # for loop enables to separate each model \n              cat(\"Model\", i, \":\", object@output$R.squared[i], \"\\n\")\n            }\n            cat(\"\\n\", \"**** End Show (Class-Regressions) **** \\n\") \n          }\n)\n",
    "created" : 1395114573636.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1644810393",
    "id" : "2F24D8FE",
    "lastKnownWriteTime" : 1395115730,
    "path" : "~/GitHub/RPackageProblemSet/regressionsPack/R/2Regressions.R",
    "project_path" : "R/2Regressions.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}